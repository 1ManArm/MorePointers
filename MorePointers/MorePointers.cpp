#include <iostream>
int main() {
	setlocale(LC_ALL, "Russian");
	int n, m;

	//Направление указателя на нейтральный адрес
	/*int *pointer;
	//Способ 1:
	pointer = 0; //нейтральный адрес
	if (pointer != 0)
		std::cout << pointer << std::endl;
	else
		std::cout << "Отсутствует инициализация указателя." << std::endl;
	//*pointer = 15; //в нейтральной памяти нельзя записать данные
	
	//Способ 2:
	pointer = NULL; //нейтральный адрес
	if (pointer != NULL)
		std::cout << pointer << std::endl;
	else
		std::cout << "Отсутствует инициализация указателя." << std::endl;

	//Способ 3(правильный):
	pointer = nullptr;
	if (pointer != nullptr)
		std::cout << pointer << std::endl;
	else
		std::cout << "Отсутствует инициализация указателя." << std::endl;*/

	//Модификации указателей
	n = 8;
	//Указатель на константу. Может быть перенаправлен на другие области памяти. С его помощью невозможно поменять значение переменной, на которую он направлен.
	const int *pn1;
	pn1 = &n;
	//*pn1 = 1; //Ошибка
	n = 1;
	std::cout << *pn1 << std::endl;
	//Констатный указатель или указатель-константа. Не может быть перенапрвлен на другие области памяти и должен быть инициализирован в момент создания. С его помощью можно менять значение переменной, на которую он направлен.
	int* const pn2 = &n;
	//pn2 = &m; //Ошибка
	*pn2 = 20;
	std::cout << n << std::endl;
	//Константный указатель на константу. Не может быть перенапрвлен на другие области памяти и должен быть инициализирован в момент создания. С его помощью невозможно поменять значение переменной, на которую он направлен.
	const int* const pn3 = &n;
	//pn3 = &m; //Ошибка
	//*pn3 = &m;//Ошибка
	std::cout << *pn3 << std::endl;

	return 0;
}